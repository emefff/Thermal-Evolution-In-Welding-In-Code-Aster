import sys
import code_aster

DEBUT(PAR_LOT = 'NON')

sigma = 5.671e-11

T_sourrounding = 25

h_still_air = 7 / 1000

length_mm = 100

num_steps = 50

length_step_mm = length_mm / num_steps

weld_speed_mms = 1 # mm/s was 2

weld_time_step = weld_speed_mms * length_step_mm

epsilon = 0.95

# W
weld_power = 5000

# mmÂ²
weldzone_top_surf_area = 8

weld_power_per_surf_area = weld_power / weldzone_top_surf_area

weld_time_step_first = 5

weld_time_step_last = 10

weld_time_total = weld_speed_mms * (length_mm - 1 * length_step_mm) + weld_time_step_first + weld_time_step_last

temp_weldzone = 1900

time_step_pas = 0.25

# print some stuff in the .mess for better visibility
print ("\n************************************************\n")
print ("***************** INPUT DATA ******************")
print("num_steps = ",num_steps)
print("length_step_mm = ",length_step_mm)
print("weld_speed_mms = ",weld_speed_mms)
print("weld_time_step = ",weld_time_step)
print("weld_time_step_first = ",weld_time_step_first)
print("weld_time_step_last = ",weld_time_step_last)
print("weld_time_total = ",weld_time_total)
print ("\n************************************************\n")

mesh = LIRE_MAILLAGE(UNITE=3)

model = AFFE_MODELE(
    AFFE=_F(MODELISATION='3D_DIAG', PHENOMENE='THERMIQUE', TOUT='OUI'),
    MAILLAGE=mesh
)

steellamb = DEFI_FONCTION(
    INTERPOL=('LIN', ),
    NOM_PARA='TEMP',
    PROL_DROITE='CONSTANT',
    PROL_GAUCHE='CONSTANT',
    VALE=(
        20.0, 53.334, 33.22033898305085, 52.893762711864404, 46.440677966101696,
        52.45352542372881, 59.66101694915254, 52.01328813559322,
        72.88135593220339, 51.57305084745763, 86.10169491525424,
        51.13281355932203, 99.32203389830508, 50.69257627118644,
        112.54237288135593, 50.25233898305085, 125.76271186440678,
        49.812101694915256, 138.98305084745763, 49.37186440677966,
        152.20338983050848, 48.931627118644066, 165.42372881355934,
        48.491389830508474, 178.64406779661016, 48.05115254237288,
        191.864406779661, 47.610915254237284, 205.08474576271186,
        47.17067796610169, 218.3050847457627, 46.7304406779661,
        231.52542372881356, 46.29020338983051, 244.74576271186442,
        45.84996610169492, 257.96610169491527, 45.40972881355932,
        271.1864406779661, 44.96949152542373, 284.40677966101697,
        44.529254237288136, 297.6271186440678, 44.08901694915254,
        310.8474576271187, 43.648779661016945, 324.0677966101695,
        43.208542372881354, 337.2881355932203, 42.76830508474576,
        350.50847457627117, 42.32806779661017, 363.728813559322,
        41.88783050847458, 376.9491525423729, 41.44759322033898,
        390.1694915254237, 41.00735593220339, 403.3898305084746,
        40.5671186440678, 416.6101694915254, 40.1268813559322,
        429.8305084745763, 39.68664406779661, 443.0508474576271,
        39.246406779661015, 456.271186440678, 38.806169491525424,
        469.49152542372883, 38.36593220338983, 482.7118644067797,
        37.92569491525423, 495.93220338983053, 37.48545762711864,
        509.1525423728814, 37.04522033898304, 522.3728813559322,
        36.60498305084745, 535.5932203389831, 36.16474576271186,
        548.8135593220339, 35.72450847457627, 562.0338983050848,
        35.28427118644068, 575.2542372881356, 34.844033898305085,
        588.4745762711865, 34.403796610169486, 601.6949152542373,
        33.963559322033895, 614.9152542372882, 33.523322033898296,
        628.135593220339, 33.083084745762704, 641.3559322033899,
        32.64284745762711, 654.5762711864406, 32.20261016949152,
        667.7966101694915, 31.76237288135593, 681.0169491525423,
        31.322135593220338, 694.2372881355932, 30.881898305084743,
        707.457627118644, 30.44166101694915, 720.6779661016949,
        30.001423728813556, 733.8983050847457, 29.561186440677965,
        747.1186440677966, 29.12094915254237, 760.3389830508474,
        28.680711864406778, 773.5593220338983, 28.240474576271183,
        786.7796610169491, 27.80023728813559, 800.0, 27.359999999999996, 810.0,
        27.3, 830.5263157894736, 27.3, 851.0526315789474, 27.3,
        871.578947368421, 27.3, 892.1052631578948, 27.3, 912.6315789473684,
        27.3, 933.1578947368421, 27.3, 953.6842105263158, 27.3,
        974.2105263157895, 27.3, 994.7368421052631, 27.3, 1015.2631578947369,
        27.3, 1035.7894736842104, 27.3, 1056.3157894736842, 27.3,
        1076.842105263158, 27.3, 1097.3684210526317, 27.3, 1117.8947368421052,
        27.3, 1138.421052631579, 27.3, 1158.9473684210527, 27.3,
        1179.4736842105262, 27.3, 1200.0, 27.3
    )
)

steelRCP = DEFI_FONCTION(
    INTERPOL=('LIN', ),
    NOM_PARA='TEMP',
    PROL_DROITE='CONSTANT',
    PROL_GAUCHE='CONSTANT',
    VALE=(
        20.0, 3.4524438159999997, 31.836734693877553, 3.5165526216460146,
        43.673469387755105, 3.577410342334299, 55.51020408163265,
        3.6351903862616424, 67.34693877551021, 3.690066161624833,
        79.18367346938776, 3.7422110766206598, 91.0204081632653,
        3.7917985394459106, 102.85714285714286, 3.839001958297376,
        114.6938775510204, 3.883994741371843, 126.53061224489795,
        3.926950296866101, 138.3673469387755, 3.968042032976939,
        150.20408163265307, 4.007443357901146, 162.0408163265306,
        4.045327679835511, 173.87755102040816, 4.08186840697682,
        185.71428571428572, 4.117238947521866, 197.55102040816325,
        4.151612709667435, 209.3877551020408, 4.185163101610315,
        221.22448979591837, 4.218063531547297, 233.0612244897959,
        4.250487407675169, 244.89795918367346, 4.282608138190719,
        256.734693877551, 4.314599131290737, 268.57142857142856,
        4.346633795172011, 280.40816326530614, 4.37888553803133,
        292.2448979591837, 4.411527768065483, 304.0816326530612,
        4.444733893471257, 315.9183673469388, 4.478677322445443,
        327.7551020408163, 4.513531463184829, 339.59183673469386,
        4.549469723886203, 351.42857142857144, 4.586665512746355,
        363.265306122449, 4.625292237962073, 375.1020408163265,
        4.665523307730147, 386.9387755102041, 4.707532130247363,
        398.7755102040816, 4.751492113710511, 410.61224489795916,
        4.797576666316381, 422.44897959183675, 4.84595919626176,
        434.2857142857143, 4.89681311174344, 446.1224489795918,
        4.9503118209582055, 457.9591836734694, 5.006628732102849,
        469.7959183673469, 5.065937253374155, 481.63265306122446,
        5.128410792968915, 493.46938775510205, 5.194222759083919,
        505.3061224489796, 5.2635465599159525, 517.1428571428571,
        5.3365556036618065, 528.9795918367347, 5.41342329851827,
        540.8163265306123, 5.494323052682131, 552.6530612244898,
        5.5794282743501755, 564.4897959183673, 5.668912371719199,
        576.3265306122449, 5.762948752985983, 588.1632653061224,
        5.861710826347321, 600.0, 5.965371999999999, 610.0, 6.0254882812499995,
        615.2083333333334, 6.059310315575161, 620.4166666666666,
        6.096128632175761, 625.625, 6.1363598442714125, 630.8333333333334,
        6.180501555209954, 636.0416666666666, 6.229153044544339, 641.25,
        6.283042635658914, 646.4583333333334, 6.343064406008192,
        651.6666666666666, 6.410328185328184, 656.875, 6.486228813559322,
        662.0833333333334, 6.572543907793634, 667.2916666666666,
        6.671574837949321, 672.5, 6.7863549618320596, 677.7083333333334,
        6.920965791292329, 682.9166666666666, 7.081032526475036, 688.125,
        7.274530075187969, 693.3333333333334, 7.513152985074628,
        698.5416666666666, 7.814770327349522, 703.75, 8.208120437956204,
        708.9583333333334, 8.742557388809187, 714.1666666666666,
        9.510576923076915, 719.375, 10.708137583892617, 724.5833333333334,
        12.835481366459648, 729.7916666666666, 17.66249999999994, 735.0, 39.25,
        745.0, 14.27017857142857, 751.4583333333334, 11.11590376782076,
        757.9166666666666, 9.475290247678025, 764.375, 8.469620786516854,
        770.8333333333334, 7.790057531380749, 777.2916666666666,
        7.3001113861386155, 783.75, 6.930136255924171, 790.2083333333334,
        6.640873504574241, 796.6666666666666, 6.408508883248731, 803.125,
        6.217757798960139, 809.5833333333334, 6.058360286320253,
        816.0416666666666, 5.923173076923077, 822.5, 5.8070696721311466,
        828.9583333333334, 5.706275521054869, 835.4166666666666,
        5.61794992019154, 841.875, 5.539914036076662, 848.3333333333334,
        5.470468749999999, 854.7916666666666, 5.4082695220464485, 861.25,
        5.35223848368522, 867.7083333333334, 5.3015014477293505,
        874.1666666666666, 5.255341967403958, 880.625, 5.213167293233082,
        887.0833333333333, 5.174482781633742, 893.5416666666666,
        5.138872404511663, 900.0, 5.10598372781065, 910.0, 5.102499999999999,
        922.0833333333334, 5.102499999999999, 934.1666666666666,
        5.102499999999999, 946.25, 5.102499999999999, 958.3333333333334,
        5.102499999999999, 970.4166666666666, 5.102499999999999, 982.5,
        5.102499999999999, 994.5833333333334, 5.102499999999999,
        1006.6666666666666, 5.102499999999999, 1018.75, 5.102499999999999,
        1030.8333333333333, 5.102499999999999, 1042.9166666666667,
        5.102499999999999, 1055.0, 5.102499999999999, 1067.0833333333333,
        5.102499999999999, 1079.1666666666667, 5.102499999999999, 1091.25,
        5.102499999999999, 1103.3333333333333, 5.102499999999999,
        1115.4166666666667, 5.102499999999999, 1127.5, 5.102499999999999,
        1139.5833333333333, 5.102499999999999, 1151.6666666666667,
        5.102499999999999, 1163.75, 5.102499999999999, 1175.8333333333335,
        5.102499999999999, 1187.9166666666667, 5.102499999999999, 1200.0,
        5.102499999999999
    )
)

steel = DEFI_MATERIAU(THER_NL=_F(LAMBDA=steellamb, RHO_CP=steelRCP))

listr_total = DEFI_LIST_REEL(
    DEBUT=0.0,
    INTERVALLE=(
        _F(JUSQU_A=weld_time_step_first,
           PAS=time_step_pas), _F(JUSQU_A=weld_time_total, PAS=time_step_pas) # was PAS=0.25
    )
)

times_total = DEFI_LIST_INST(
    DEFI_LIST=_F(LIST_INST=listr_total), METHODE='AUTO'
)

heat_temp_func = DEFI_FONCTION(
    INTERPOL=('LIN', ),
    NOM_PARA='INST',
    PROL_DROITE='CONSTANT',
    PROL_GAUCHE='CONSTANT',
    VALE=(0.0, 1.0, weld_time_step_first, 1.0, weld_time_total-weld_time_step_last, 1.0,
          weld_time_total-weld_time_step_last+time_step_pas, 0.5, weld_time_total, 0.3 )
)

nolambda = DEFI_CONSTANTE(NOM_RESU='TOUTRESU', VALE=0.0)

nosteel = DEFI_MATERIAU(THER_NL=_F(LAMBDA=nolambda, RHO_CP=steelRCP))

fieldmat_1 = AFFE_MATERIAU(
    AFFE=(
        _F(GROUP_MA=('ZONE1', 'PLATE1_ALL', 'PLATE2_ALL'), MATER=(steel, )),
        _F(
            GROUP_MA=(
                'ZONE2', 'ZONE3', 'ZONE4', 'ZONE5', 'ZONE6', 'ZONE7', 'ZONE8',
                'ZONE9', 'ZONE10', 'ZONE11', 'ZONE12', 'ZONE13', 'ZONE14',
                'ZONE15', 'ZONE16', 'ZONE17', 'ZONE18', 'ZONE19', 'ZONE20',
                'ZONE21', 'ZONE22', 'ZONE23', 'ZONE24', 'ZONE25', 'ZONE26',
                'ZONE27', 'ZONE28', 'ZONE29', 'ZONE30', 'ZONE31', 'ZONE32',
                'ZONE33', 'ZONE34', 'ZONE35', 'ZONE36', 'ZONE37', 'ZONE38',
                'ZONE39', 'ZONE40', 'ZONE41', 'ZONE42', 'ZONE43', 'ZONE44',
                'ZONE45', 'ZONE46', 'ZONE47', 'ZONE48', 'ZONE49', 'ZONE50'
            ),
            MATER=(nosteel, )
        )
    ),
    MODELE=model
)

liaison_1 = AFFE_CHAR_THER(
    LIAISON_MAIL=(
        _F(
            GROUP_MA_ESCL=('ZONE1_LIAI_PLATE1', ),
            GROUP_MA_MAIT=('PLATE1_ALL', )
        ),
        _F(
            GROUP_MA_ESCL=('ZONE1_LIAI_PLATE2', ),
            GROUP_MA_MAIT=('PLATE2_ALL', )
        )
    ),
    MODELE=model
)

cooling_1 = AFFE_CHAR_THER(
    ECHANGE=_F(
        COEF_H=h_still_air,
        GROUP_MA=('PLATE1_SURF', 'PLATE2_SURF','ZONE1_left'),
        TEMP_EXT=T_sourrounding
    ),
    MODELE=model,
    RAYONNEMENT=_F(
        EPSILON=epsilon,
        GROUP_MA=('PLATE1_SURF', 'PLATE2_SURF','ZONE1_left'),
        SIGMA=sigma,
        TEMP_EXT=T_sourrounding
    )
)

#comment: heat_flux_1 = AFFE_CHAR_THER(FLUX_REP=_F(FLUN=weld_power_per_surf_area,
#comment:                                          GROUP_MA=('ZONE1_top', )),
#comment:                              MODELE=model)

heat_temp_1 = AFFE_CHAR_THER(
    MODELE=model, TEMP_IMPO=_F(GROUP_MA=('ZONE1', ), TEMP=temp_weldzone)
)

temp_1 = CREA_CHAMP(
    AFFE=_F(NOM_CMP=('TEMP', ), TOUT='OUI', VALE=(T_sourrounding, )),
    MODELE=model,
    OPERATION='AFFE',
    TYPE_CHAM='NOEU_TEMP_R'
)

TEMP_1 = CREA_RESU(
    AFFE=_F(CHAM_GD=temp_1, CHAM_MATER=fieldmat_1, INST=(0.0, ), MODELE=model),
    NOM_CHAM='TEMP',
    OPERATION='AFFE',
    TYPE_RESU='EVOL_THER'
)

resther = THER_NON_LINE(
    CHAM_MATER=fieldmat_1,
    COMPORTEMENT=_F(RELATION='THER_NL', TOUT='OUI'),
    CONVERGENCE=_F(ITER_GLOB_MAXI=100, RESI_GLOB_RELA=1e-06),
    ETAT_INIT=_F(EVOL_THER=TEMP_1, INST=0.0),
    EXCIT=(
        _F(CHARGE=liaison_1), _F(CHARGE=heat_temp_1, FONC_MULT=heat_temp_func),
        _F(CHARGE=cooling_1)
    ),
    INCREMENT=_F(
        INST_FIN=weld_time_step_first, INST_INIT=0.0, LIST_INST=times_total
    ),
    METHODE='NEWTON',
    MODELE=model,
    NEWTON=_F(REAC_ITER=1),
    PARM_THETA=1.0, 
    SOLVEUR=_F(MATR_DISTRIBUEE='OUI', METHODE='MUMPS', RENUM='AUTO')
)

#comment: IMPR_RESU(RESU=_F(RESULTAT=resther),
#comment:           UNITE=4)

################################ ITER #########################################

zones_list = [
    'ZONE1', 'ZONE2', 'ZONE3', 'ZONE4', 'ZONE5', 'ZONE6', 'ZONE7',
    'ZONE8', 'ZONE9', 'ZONE10', 'ZONE11', 'ZONE12', 'ZONE13', 'ZONE14',
    'ZONE15', 'ZONE16', 'ZONE17', 'ZONE18', 'ZONE19', 'ZONE20', 'ZONE21',
    'ZONE22', 'ZONE23', 'ZONE24', 'ZONE25', 'ZONE26', 'ZONE27', 'ZONE28',
    'ZONE29', 'ZONE30', 'ZONE31', 'ZONE32', 'ZONE33', 'ZONE34', 'ZONE35',
    'ZONE36', 'ZONE37', 'ZONE38', 'ZONE39', 'ZONE40', 'ZONE41', 'ZONE42',
    'ZONE43', 'ZONE44', 'ZONE45', 'ZONE46', 'ZONE47', 'ZONE48', 'ZONE49',
    'ZONE50'
]

zones_tops_list = [
    'ZONE1_top', 'ZONE2_top', 'ZONE3_top', 'ZONE4_top', 'ZONE5_top',
    'ZONE6_top', 'ZONE7_top', 'ZONE8_top', 'ZONE9_top',
    'ZONE10_top', 'ZONE11_top', 'ZONE12_top', 'ZONE13_top', 'ZONE14_top',
    'ZONE15_top', 'ZONE16_top', 'ZONE17_top', 'ZONE18_top', 'ZONE19_top',
    'ZONE20_top', 'ZONE21_top', 'ZONE22_top', 'ZONE23_top', 'ZONE24_top',
    'ZONE25_top', 'ZONE26_top', 'ZONE27_top', 'ZONE28_top', 'ZONE29_top',
    'ZONE30_top', 'ZONE31_top', 'ZONE32_top', 'ZONE33_top', 'ZONE34_top',
    'ZONE35_top', 'ZONE36_top', 'ZONE37_top', 'ZONE38_top', 'ZONE39_top',
    'ZONE40_top', 'ZONE41_top', 'ZONE42_top', 'ZONE43_top', 'ZONE44_top',
    'ZONE45_top', 'ZONE46_top', 'ZONE47_top', 'ZONE48_top', 'ZONE49_top',
    'ZONE50_top'
]

liasions_plate1_list = [
    'ZONE1_LIAI_PLATE1', 'ZONE2_LIAI_PLATE1', 'ZONE3_LIAI_PLATE1',
    'ZONE4_LIAI_PLATE1', 'ZONE5_LIAI_PLATE1', 'ZONE6_LIAI_PLATE1',
    'ZONE7_LIAI_PLATE1', 'ZONE8_LIAI_PLATE1', 'ZONE9_LIAI_PLATE1',
    'ZONE10_LIAI_PLATE1', 'ZONE11_LIAI_PLATE1', 'ZONE12_LIAI_PLATE1',
    'ZONE13_LIAI_PLATE1', 'ZONE14_LIAI_PLATE1', 'ZONE15_LIAI_PLATE1',
    'ZONE16_LIAI_PLATE1', 'ZONE17_LIAI_PLATE1', 'ZONE18_LIAI_PLATE1',
    'ZONE19_LIAI_PLATE1', 'ZONE20_LIAI_PLATE1', 'ZONE21_LIAI_PLATE1',
    'ZONE22_LIAI_PLATE1', 'ZONE23_LIAI_PLATE1', 'ZONE24_LIAI_PLATE1',
    'ZONE25_LIAI_PLATE1', 'ZONE26_LIAI_PLATE1', 'ZONE27_LIAI_PLATE1',
    'ZONE28_LIAI_PLATE1', 'ZONE29_LIAI_PLATE1', 'ZONE30_LIAI_PLATE1',
    'ZONE31_LIAI_PLATE1', 'ZONE32_LIAI_PLATE1', 'ZONE33_LIAI_PLATE1',
    'ZONE34_LIAI_PLATE1', 'ZONE35_LIAI_PLATE1', 'ZONE36_LIAI_PLATE1',
    'ZONE37_LIAI_PLATE1', 'ZONE38_LIAI_PLATE1', 'ZONE39_LIAI_PLATE1',
    'ZONE40_LIAI_PLATE1', 'ZONE41_LIAI_PLATE1', 'ZONE42_LIAI_PLATE1',
    'ZONE43_LIAI_PLATE1', 'ZONE44_LIAI_PLATE1', 'ZONE45_LIAI_PLATE1',
    'ZONE46_LIAI_PLATE1', 'ZONE47_LIAI_PLATE1', 'ZONE48_LIAI_PLATE1', 
    'ZONE49_LIAI_PLATE1', 'ZONE50_LIAI_PLATE1'
]

liasions_plate2_list = [
    'ZONE1_LIAI_PLATE2', 'ZONE2_LIAI_PLATE2', 'ZONE3_LIAI_PLATE2',
    'ZONE4_LIAI_PLATE2', 'ZONE5_LIAI_PLATE2', 'ZONE6_LIAI_PLATE2',
    'ZONE7_LIAI_PLATE2', 'ZONE8_LIAI_PLATE2', 'ZONE9_LIAI_PLATE2',
    'ZONE10_LIAI_PLATE2', 'ZONE11_LIAI_PLATE2', 'ZONE12_LIAI_PLATE2',
    'ZONE13_LIAI_PLATE2', 'ZONE14_LIAI_PLATE2', 'ZONE15_LIAI_PLATE2',
    'ZONE16_LIAI_PLATE2', 'ZONE17_LIAI_PLATE2', 'ZONE18_LIAI_PLATE2',
    'ZONE19_LIAI_PLATE2', 'ZONE20_LIAI_PLATE2', 'ZONE21_LIAI_PLATE2',
    'ZONE22_LIAI_PLATE2', 'ZONE23_LIAI_PLATE2', 'ZONE24_LIAI_PLATE2',
    'ZONE25_LIAI_PLATE2', 'ZONE26_LIAI_PLATE2', 'ZONE27_LIAI_PLATE2',
    'ZONE28_LIAI_PLATE2', 'ZONE29_LIAI_PLATE2', 'ZONE30_LIAI_PLATE2',
    'ZONE31_LIAI_PLATE2', 'ZONE32_LIAI_PLATE2', 'ZONE33_LIAI_PLATE2',
    'ZONE34_LIAI_PLATE2', 'ZONE35_LIAI_PLATE2', 'ZONE36_LIAI_PLATE2',
    'ZONE37_LIAI_PLATE2', 'ZONE38_LIAI_PLATE2', 'ZONE39_LIAI_PLATE2',
    'ZONE40_LIAI_PLATE2', 'ZONE41_LIAI_PLATE2', 'ZONE42_LIAI_PLATE2',
    'ZONE43_LIAI_PLATE2', 'ZONE44_LIAI_PLATE2', 'ZONE45_LIAI_PLATE2',
    'ZONE46_LIAI_PLATE2', 'ZONE47_LIAI_PLATE2', 'ZONE48_LIAI_PLATE2', 
    'ZONE49_LIAI_PLATE2', 'ZONE50_LIAI_PLATE2'
]

counter = 0
for i in range(num_steps-1):
    
    counter = i

    print ("\n************************************************\n")
    print("       STARTING ITERATION NR.",i, "OF", num_steps-2)
    print ("\n************************************************\n")

    time_init = weld_time_step_first + i * weld_time_step
    time_fin = weld_time_step_first + (i + 1) * weld_time_step

    zones_active = zones_list[:i + 2]
    zones_inactive = zones_list[i + 2:]
    zone_weld = zones_list[i+1] 

    liasions_plate1_active = liasions_plate1_list[:i + 2]
    liasions_plate2_active = liasions_plate2_list[:i + 2]

    zones_top_active = zones_tops_list[:i + 1]
    
    if i == num_steps-2:
        fieldmat = AFFE_MATERIAU(
            AFFE=(
                _F(
                    GROUP_MA=tuple(zones_active) + ('PLATE1_ALL', 'PLATE2_ALL'),
                    MATER=(steel, )
                )
            ),
        MODELE=model
        )
    else:
        fieldmat = AFFE_MATERIAU(
            AFFE=(
                _F(
                    GROUP_MA=tuple(zones_active) + ('PLATE1_ALL', 'PLATE2_ALL'),
                    MATER=(steel, )
                ), _F(GROUP_MA=tuple(zones_inactive), MATER=(nosteel, ))
            ),
            MODELE=model
        )

    liaison = AFFE_CHAR_THER(
        LIAISON_MAIL=(
            _F(
                GROUP_MA_ESCL=tuple(liasions_plate1_active),
                GROUP_MA_MAIT=('PLATE1_ALL', )
            ),
            _F(
                GROUP_MA_ESCL=tuple(liasions_plate2_active),
                GROUP_MA_MAIT=('PLATE2_ALL', )
            )
        ),
        MODELE=model
    )


    cooling = AFFE_CHAR_THER(
        ECHANGE=_F(
            COEF_H=h_still_air,
            GROUP_MA=tuple(zones_top_active) + ('PLATE1_SURF', 'PLATE2_SURF', 'ZONE1_left'),
            TEMP_EXT=T_sourrounding
        ),
        MODELE=model,
        RAYONNEMENT=_F(
            EPSILON=epsilon,
            GROUP_MA=tuple(zones_top_active) + ('PLATE1_SURF', 'PLATE2_SURF','ZONE1_left'),
            SIGMA=sigma,
            TEMP_EXT=T_sourrounding
        )
    )

    heat_temp = AFFE_CHAR_THER(
        MODELE=model,
        TEMP_IMPO=_F(GROUP_MA=tuple([zone_weld]), TEMP=temp_weldzone) # the additional [] is important here!
    )

    resther = THER_NON_LINE(
        reuse=resther,
        CHAM_MATER=fieldmat,
        COMPORTEMENT=_F(RELATION='THER_NL', TOUT='OUI'),
        CONVERGENCE=_F(ITER_GLOB_MAXI=100, RESI_GLOB_RELA=1e-06),
        ETAT_INIT=_F(EVOL_THER=resther),
        EXCIT=(
            _F(CHARGE=liaison), _F(CHARGE=heat_temp, FONC_MULT=heat_temp_func),
            _F(CHARGE=cooling)
        ),
        INCREMENT=_F(INST_FIN=time_fin, INST_INIT=time_init, LIST_INST=times_total),
        METHODE='NEWTON',
        MODELE=model,
        NEWTON=_F(REAC_ITER=1),
        RESULTAT=resther,
        PARM_THETA=1.0, 
        SOLVEUR=_F(MATR_DISTRIBUEE='OUI', METHODE='MUMPS', RENUM='AUTO')
    )

time_init = weld_time_step_first + (counter+1) * weld_time_step
time_fin = weld_time_total

# after the last welding step we cool down
# the rest of the input params stays the same as in last welding step
# in the last step, the wedge like outer surf of the weld also cools the weld
cooling = AFFE_CHAR_THER(
    ECHANGE=_F(
        COEF_H=h_still_air,
        GROUP_MA=tuple(zones_top_active) + ('PLATE1_SURF', 'PLATE2_SURF', 'ZONE1_left', 'ZONE50_right','ZONE50_top'),
        TEMP_EXT=T_sourrounding
    ),
    MODELE=model,
    RAYONNEMENT=_F(
        EPSILON=epsilon,
        GROUP_MA=tuple(zones_top_active) + ('PLATE1_SURF', 'PLATE2_SURF', 'ZONE1_left', 'ZONE50_right','ZONE50_top'),
        SIGMA=sigma,
        TEMP_EXT=T_sourrounding
    )
)

resther = THER_NON_LINE(
    reuse=resther,
    CHAM_MATER=fieldmat,
    COMPORTEMENT=_F(RELATION='THER_NL', TOUT='OUI'),
    CONVERGENCE=_F(ITER_GLOB_MAXI=100, RESI_GLOB_RELA=1e-06),
    ETAT_INIT=_F(EVOL_THER=resther),
    EXCIT=(
        _F(CHARGE=liaison), _F(CHARGE=cooling)
    ),
    INCREMENT=_F(INST_FIN=time_fin, INST_INIT=time_init, LIST_INST=times_total),
    METHODE='NEWTON',
    MODELE=model,
    NEWTON=_F(REAC_ITER=1),
    RESULTAT=resther,
    PARM_THETA=1.0, 
    SOLVEUR=_F(MATR_DISTRIBUEE='OUI', METHODE='MUMPS', RENUM='AUTO')
    )


IMPR_RESU(RESU=_F(RESULTAT=resther), UNITE=2)

FIN()

